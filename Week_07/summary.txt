字典树 Tire
    数据结构：
    核心思想：空间换时间；利用字符串的公告前缀来降低查询时间的开销已达到提到效率的目的。
    基本性质：1、节点本身不存完整单词；2、从跟节点到某一个结点，路径上的字符连接起来，为该结点对应的字符串；3、每个结点的所有子结点路径代表的字符都不相同

平衡树
    1、AVL 树严格平衡，左右子树在{-1,0,1} 范围  ，需要多次旋转 左旋 右旋 左右旋 右左旋
    2、红黑树保持2倍的距离左右子树即可
        ->结点由红黑色组成
        ->根结点必须是黑结点
        ->相邻两个结点不能是红色
        ->从任意结点到达叶子结点所经历的黑结点个数相同
        ->所有叶子结点都是NIL黑色
    3、比较：
        ->AVL查询比红黑树更快，因为平衡更加严格
        ->红黑树插入、删除操作更快，因为不需要多次的旋转
        ->数据库多用AVL树因为要提高查的速度；一些高级语言中的类库多用红黑树，如 ：java 中set ，map 因为提高操作的速度